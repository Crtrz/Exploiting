local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local CurrentPosition = Character:WaitForChild("HumanoidRootPart").Position

--//Local Farm Tables\\--
ItemFarmTable = {"Iron", "Crystal Chunk", "Raw Magnetite", "Raw Iron", "Raw Adurite", "Adurite", "Raw Emerald", "Emerald", "Raw Gold", "Gold"}

local InstaFarm

getgenv().InstantRespawn = true
getgenv().InfiniteItemFarm = true

--//Services\\--
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

if not getgenv().AlreadyRan then
    getgenv().DroppedItems = Instance.new("Folder"); DroppedItems.Parent = workspace; DroppedItems.Name = "DroppedItems"
    getgenv().LivingFolder = Instance.new("Folder"); LivingFolder.Parent = workspace; LivingFolder.Name = "Living"
    getgenv().BreakablesFolder = Instance.new("Folder"); BreakablesFolder.Parent = workspace; BreakablesFolder.Name = "Breakables"
    local StopLoadingItem = 0.25 --//Seconds\\--
    
    function AddToFolder(Item, ItemAdded)
        task.spawn(function()
            if ItemAdded then
                local NewItemVar = 0; StopLoadingItem = 33.33 * StopLoadingItem
                repeat wait() NewItemVar = NewItemVar + 1 until Item:FindFirstChild("Pickup") or Item:FindFirstChild("Health") and not Item:FindFirstChild("HumanoidRootPart") or Item:FindFirstChild("HumanoidRootPart") and Item:FindFirstChild("Humanoid") or NewItemVar >= StopLoadingItem 
            end
            if Item:FindFirstChild("Pickup") then
                Item.Parent = DroppedItems
            elseif Item:FindFirstChild("Health") and not Item:FindFirstChild("HumanoidRootPart") then
                Item.Parent = BreakablesFolder
            elseif Item:FindFirstChild("HumanoidRootPart") and Item:FindFirstChild("Humanoid")then
                Item.Parent = LivingFolder
            end
        end)
    end
    
    for ItemNumber, Item in pairs(Workspace:GetDescendants()) do
        AddToFolder(Item, false)
    end
    
    Workspace.DescendantAdded:Connect(function(Item)
        AddToFolder(Item, true)
    end)
    getgenv().AlreadyRan = true
end

local ShouldFarm = false
local function WaitForDeath(Char)
    local DieMeature
    local DiedCheck
    local ItemCollect
    
    DiedCheck = Char:WaitForChild("Humanoid").Died:Connect(function()
        DiedCheck:Disconnect()
        
    	if getgenv().InstantRespawn then
    	    task.spawn(function()
        	    repeat wait() game:GetService("ReplicatedStorage").Events.SpawnFirst:FireServer() until not Char.Parent
        	    local InstaSpawnedCharacter = game.Players.LocalPlayer.Character
                
                ShouldFarm = true
                task.spawn(function() 
                    for _, Part in pairs(DroppedItems:GetChildren()) do
                        if Part:IsA("BasePart") and Part:FindFirstChild("Pickup") and (table.find(ItemFarmTable, Part.Name) or table.find(ItemFarmTable, "All")) and InstaSpawnedCharacter.Parent then
                            
                            game:GetService("ReplicatedStorage").Events.ForceInteract:FireServer(Part)
                            ItemCollect = RunService.Stepped:Connect(function()
                                if ShouldFarm == true then
                                    InstaSpawnedCharacter:WaitForChild("HumanoidRootPart").CFrame = Part.CFrame
                                    game:GetService("ReplicatedStorage").Events.Pickup:FireServer(Part)
                                end
                            end)
                            
                            task.wait(0.225)
                            ItemCollect:Disconnect()
                        end
                        
                        if ShouldFarm == false or not InstaSpawnedCharacter.Parent then
                            break
                        end
                    end
                end)
                
                repeat task.wait() until not InstaSpawnedCharacter.Parent and Player.Character and Player.Character.Parent and Player.Character:FindFirstChild("Head") and Player.Character:FindFirstChild("Humanoid")
                ShouldFarm = false
                
                --//Disconnect Old Functions\\--
                ItemCollect:Disconnect()
                DiedCheck:Disconnect()
                    
                Player.Character:WaitForChild("Head"):Destroy()
                Player.Character:WaitForChild("Humanoid").Health = 0
    	    end)
    	end
    end)
end

WaitForDeath(Character)
Player.CharacterAdded:Connect(function(Char)
    WaitForDeath(Char)
end)

